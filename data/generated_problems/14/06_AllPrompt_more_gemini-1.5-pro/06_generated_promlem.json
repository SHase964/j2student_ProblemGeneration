{
  "selected_problem": {
    "problem_id": "No7.c",
    "difficulty": 7,
    "description": "与えられた2つの文字列str1とstr2について、str2がstr1のサブ文字列であるかどうかを判定する関数isSubstringを作成しなさい。str1内にstr2が含まれていれば1を、そうでなければ0を返すようにしてください。\\n\\n例えば、str1が\"programming\"でstr2が\"gram\"の場合、str2はstr1のサブ文字列なので1を返します。str1が\"coding\"でstr2が\"dog\"の場合、str2はstr1のサブ文字列ではないので0を返します。\\n\\n関数isSubstringは、ポインタ演算を使用して文字列を比較してください。また、文字列の長さを求めるstrlen関数などは使用せず、自作の関数で文字列の長さを取得してください。\\n\\n標準入力から2つの文字列を受け取り、結果を表示するmain関数も作成してください。",
    "reason": "学習者は、No4.cとNo5.cで動的配列の確保と操作、ポインタ変数の使用、ループ処理、条件分岐といった基本的なC言語のスキルを示しています。No6.cは未解答ですが、No4.cとNo5.cの解答から、ポインタと配列の理解はある程度できていると推測されます。\\n\\nこの新しい問題は、文字列操作とポインタ演算に焦点を当てています。文字列の長さを求める関数strlen関数の使用を禁止することで、ポインタ演算の理解を深めることを狙っています。また、サブ文字列の判定という課題を通して、より複雑な文字列操作への応用能力を養うことができます。これは、No6.cの文字列結合問題よりも難易度が高く、学習者の現在のスキルセットを基にした適切な挑戦となります。",
    "examples": [
      {
        "input": "programming\\ngram",
        "output": "1",
        "explanation": "\"gram\"は\"programming\"のサブ文字列です。"
      },
      {
        "input": "coding\\ndog",
        "output": "0",
        "explanation": "\"dog\"は\"coding\"のサブ文字列ではありません。"
      },
      {
        "input": "hello\\nworld",
        "output": "0",
        "explanation": "\"world\"は\"hello\"のサブ文字列ではありません。"
      },
      {
        "input": "abababa\\naba",
        "output": "1",
        "explanation": "\"aba\"は\"abababa\"のサブ文字列です。"
      }
    ],
    "learning_objectives": [
      "ポインタ演算の理解",
      "文字列操作の習熟",
      "アルゴリズムの設計能力の向上",
      "自作関数による文字列長の取得"
    ]
  },
  "reasoning": "No4.cとNo5.cが解答済みでNo6.cが未解答という状況から、学習者は配列とポインタの操作にはある程度の理解を示しているものの、文字列操作に課題があると推測されます。提示された問題候補の中で、2つ目の問題は、文字列操作に焦点を当てつつ、strlen関数を使用しない制約を設けることで、ポインタ演算の理解を深めるのに効果的です。また、サブ文字列判定という課題は、アルゴリズムの設計能力も養うことができます。1つ目の問題は難易度が高いものの、No6.cの未解答理由を直接的に addressedしているわけではないため、2つ目の問題がより適切です。3つ目の問題は、文字列操作の練習にはなりますが、2つ目の問題と比較すると、ポインタ演算の理解を促進するにはやや物足りません。",
  "improvements": [
    "問題の難易度を調整するために、サブ文字列の探索範囲を限定するなどの制約を追加することが考えられます。例えば、最初の数文字だけを探索範囲とする、あるいは特定の文字が出現するまでの範囲を探索範囲とするなどです。",
    "より実践的な課題として、ファイル入出力と組み合わせることも考えられます。例えば、ファイルから読み込んだ文字列に対してサブ文字列判定を行うなどです。"
  ]
}