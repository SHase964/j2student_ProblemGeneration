{
  "selected_problem": {
    "problem_id": "No7.c",
    "difficulty": 4,
    "description": "以下の内容をすべて含むプログラムを作成しなさい。\n(1) n個の整数を動的に入力し、配列に保存しなさい。\n(2) 配列の中で最大値を探し、そのインデックスを出力しなさい。\n(3) 配列の要素を昇順に並べ替えて表示しなさい。",
    "reason": "この問題は、学習者が動的メモリ確保、配列操作、基本的なアルゴリズム（最大値検索とソート）についての理解を深めるために設計されました。過去の提出では、動的メモリ管理と配列の基本操作を行う能力が示されていますが、ソートアルゴリズムの経験が不足していることが示唆されています。この問題は、配列の操作を強化し、基本的なソートアルゴリズムを理解するためのステップとして適切です。",
    "examples": [
      {
        "input": "入力：5\n7 3 9 1 5",
        "output": "最大値のインデックス：2\n昇順に並べ替えた配列：1 3 5 7 9",
        "explanation": "5個の整数を入力し、最大値を探す。最大値は9で、インデックスは2である。配列を昇順に並べ替えると、1, 3, 5, 7, 9となる。"
      }
    ],
    "learning_objectives": [
      "動的メモリの確保と解放",
      "配列内の値の検索と置換",
      "基本的なソートアルゴリズムの実装"
    ]
  },
  "reasoning": "この問題は、学習者が既に持っている動的メモリ管理と配列操作のスキルを活用しつつ、ソートアルゴリズムの理解を深めるために最適です。難易度が適切であり、学習者の現在のスキルセットに対して挑戦的でありながら実現可能な範囲にあります。また、問題の構造が明確であり、学習目標も具体的です。",
  "improvements": [
    "ソートアルゴリズムの選択肢を提示し、学習者に選ばせることで、アルゴリズムの比較と選択のスキルを育成する。",
    "動的メモリ確保のエラーチェックを追加し、堅牢なプログラム設計を促す。",
    "最大値のインデックスが複数ある場合の処理についても考慮させることで、より複雑な状況に対応する力を養う。"
  ]
}