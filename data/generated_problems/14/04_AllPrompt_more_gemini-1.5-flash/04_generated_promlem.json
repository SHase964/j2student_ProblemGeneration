{
  "selected_problem": {
    "problem_id": "No7_revised",
    "difficulty": 7,
    "description": "キーボードから入力された10個の整数を格納する配列を動的に確保し、その配列の要素を昇順にソートするプログラムを作成してください。ソートアルゴリズムは、選択ソート、バブルソート、挿入ソートのいずれかを選択して実装してください。ソート後の配列の要素を標準出力に出力し、動的に確保したメモリを解放してください。エラー処理は不要です。",
    "reason": "学習者は動的メモリ確保と配列操作の基本的なスキルを習得しており、既に配列操作に関する問題を解いています。この問題では、ソートアルゴリズムという新たな概念を導入することで、適切な難易度で学習を促進できると考えました。さらに、メモリ解放の処理を追加することで、資源管理の重要性も理解させます。",
    "examples": [
      {
        "input": "5 2 9 1 5 6 3 8 4 7",
        "output": "1 2 3 4 5 5 6 7 8 9",
        "explanation": "キーボードから入力された10個の整数が昇順にソートされ出力されます。"
      }
    ],
    "learning_objectives": [
      "動的メモリ確保",
      "配列のソート(選択ソート、バブルソート、挿入ソート)",
      "ソートアルゴリズムの理解",
      "動的メモリの解放",
      "標準出力への出力"
    ]
  },
  "reasoning": "3つの問題候補の中で、この問題が学習者の現在のスキルレベルに最も適していると考えました。動的メモリ確保と配列操作は既に習得しているので、ソートアルゴリズムという新たな概念に挑戦させることで、学習効果を高めることができます。また、メモリ解放処理を含めることで、実践的なプログラミングスキルを養うことができます。他の問題候補は、文字列操作や2次元配列といった、学習者がまだ十分に習得していない概念が含まれているため、難易度が高すぎると判断しました。",
  "improvements": [
    "問題文にメモリ解放の処理を含めることで、より実践的な問題に改善しました。",
    "学習者が選択できるソートアルゴリズムの種類を明示的に記述しました。",
    "エラー処理は不要と明記することで、問題の範囲を明確にしました。"
  ]
}