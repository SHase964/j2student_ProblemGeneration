{
  "selected_problem": {
    "problem_id": "No7.c",
    "difficulty": 6,
    "description": "与えられた整数 n に対して、n! (n の階乗) を計算する関数 fact() を実装してください。計算結果は動的に確保したメモリに格納し、main 関数で出力してください。また、n が負の数の場合には、エラーメッセージを表示するようにしてください。",
    "reason": "学習者は配列や動的メモリ管理の基本を理解していますが、再帰的な関数の実装やエラーハンドリングの経験が不足しているため、これらの新しい概念を含む問題を提供します。",
    "examples": [
      {
        "input": "5",
        "output": "5! = 120",
        "explanation": "5 の階乗は 5 × 4 × 3 × 2 × 1 = 120 です。"
      },
      {
        "input": "-3",
        "output": "エラー: 負の数の階乗は計算できません。",
        "explanation": "負の数の階乗は定義されていないため、エラーメッセージを表示します。"
      }
    ],
    "learning_objectives": [
      "再帰関数の実装",
      "動的メモリ確保と解放",
      "エラーハンドリングの実装",
      "階乗の計算方法の理解"
    ]
  },
  "reasoning": "この問題は学習者にとって新しい概念である再帰やエラーハンドリングを学ぶ良い機会を提供します。また、動的メモリ管理の理解を深めるための実践的な課題でもあります。学習者の現在の能力に適した挑戦的な内容です。",
  "improvements": [
    "問題文に具体的な制約条件（例えば、nの最大値など）を追加することで、実装の際の注意点を明確にする。",
    "再帰関数の使用に関するヒントを提供することで、学習者がつまずかないようにする。",
    "エラーハンドリングの具体例を示すことで、学習者がより理解しやすくする。"
  ]
}