{
  "selected_problem": {
    "problem_id": "Learner41_Adv1",
    "difficulty": 4,
    "description": "動的に確保された配列を用いて、与えられた整数リストの中央値を求めるプログラムを作成してください。プログラムはユーザーが配列のサイズを入力し、その後に続く整数値を入力します。整数値はソートされた後、中央値が計算され、表示されます。配列は適切に解放される必要があります。",
    "reason": "学習者は配列の動的確保と基本的なループ操作に慣れていますが、入力の処理には若干の不備が見られます。また、ソートやポインタ操作の経験を深めることが必要です。今回の問題では、配列操作とメモリ管理の強化に加え、ソートアルゴリズムと中央値の概念を導入することで、実用的なスキルを養います。",
    "examples": [
      {
        "input": "サイズ: 5\n整数値: 3 1 4 1 5",
        "output": "中央値: 3",
        "explanation": "ソート後の配列は [1, 1, 3, 4, 5] で、中央の値が 3 です。"
      }
    ],
    "learning_objectives": [
      "動的メモリ確保の理解",
      "配列操作とソートの実装",
      "中央値の概念と計算方法の理解",
      "メモリリークを避けるためのメモリ解放の重要性"
    ]
  },
  "reasoning": "この問題は学習者の現在の理解度に適しており、動的メモリ管理と配列操作のスキルを強化するのに最適です。学習者はすでに基本的な配列操作に慣れているため、ソートアルゴリズムと中央値の計算を通じて、より高度な配列操作を学ぶことができます。また、メモリ管理の重要性を理解するための良い機会となります。",
  "improvements": [
    "ソートアルゴリズムの選択肢を提示し、学習者に選ばせることで、アルゴリズムの違いを理解させる。",
    "入力エラーチェックを追加し、ユーザーの入力が正しい形式であることを確認するプロセスを導入する。",
    "中央値の計算において、偶数個の要素がある場合の処理方法を明確にする。"
  ]
}