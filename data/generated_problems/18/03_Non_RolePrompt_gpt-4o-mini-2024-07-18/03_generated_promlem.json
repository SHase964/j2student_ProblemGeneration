{
  "selected_problem": {
    "problem_id": "No7.c",
    "difficulty": 6,
    "description": "与えられた整数の配列を受け取り、その配列の要素をソートするプログラムを作成してください。ソートにはバブルソートアルゴリズムを使用し、ソート後の配列を出力してください。配列のサイズは動的に確保してください。",
    "reason": "学習者は配列の動的確保と基本的なソートに関する理解を示しており、バブルソートは基礎的なソートアルゴリズムであり、適切な難易度であると判断しました。また、動的メモリ管理の知識を強化するために、配列のサイズを入力させることにしました。",
    "examples": [
      {
        "input": "5\n5 3 8 1 4\n",
        "output": "1 3 4 5 8\n",
        "explanation": "入力として5つの整数が与えられ、それらをバブルソートした結果、出力としてソートされた配列が表示されます。"
      }
    ],
    "learning_objectives": [
      "動的メモリ確保の理解",
      "バブルソートアルゴリズムの実装",
      "配列の操作と出力",
      "メモリリークを防ぐためのfree関数の使用"
    ]
  },
  "reasoning": "この問題は、学習者が動的メモリ確保や配列操作に関する理解を深めるために適しており、バブルソートという基本的なアルゴリズムを実装することで、実践的なプログラミングスキルを向上させることができます。また、メモリ管理の重要性を学ぶ良い機会でもあります。",
  "improvements": [
    "バブルソート以外のソートアルゴリズム（例：クイックソートやマージソート）を選択肢として提示し、学習者に選ばせることで、より深い理解を促す。",
    "入力の検証を追加し、負の整数や非整数が入力された場合のエラーハンドリングを考慮する。",
    "ソートの結果を視覚的に表示する方法を提案し、学習者が結果をより理解しやすくする。"
  ]
}