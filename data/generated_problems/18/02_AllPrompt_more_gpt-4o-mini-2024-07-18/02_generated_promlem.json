{
  "selected_problem": {
    "problem_id": "No7.c",
    "difficulty": 6,
    "description": "任意のサイズの整数の配列を動的に確保し、その配列に対して以下の処理を行うプログラムを作成してください。 (1) 配列に0から99のランダムな整数を入力し、その配列を出力する。 (2) 配列の中の最大値と最小値を求め出力する。 (3) 配列の要素を昇順にソートし、その結果を出力する。",
    "reason": "学習者は動的なメモリ管理や配列の基本的な利用に関する理解を示しています。新たに最大値・最小値の計算やソートアルゴリズム（例えばバブルソート）を導入することで、既存の知識を深めつつ、実践的な課題に挑戦する機会を提供します。",
    "examples": [
      {
        "input": "5\n",
        "output": "(1)\n34 12 8 99 60 \n(2)\n最小値: 8\n最大値: 99\n(3)\n8 12 34 60 99 \n",
        "explanation": "5という数を入力すると、5つの整数がランダムに生成され、その後最小値・最大値が計算され、昇順にソートされて出力される。"
      }
    ],
    "learning_objectives": [
      "動的メモリ確保の理解",
      "配列の基本操作",
      "最大値と最小値の計算",
      "ソートアルゴリズムの実装"
    ]
  },
  "reasoning": "この問題は、学習者が動的メモリ管理や配列の操作に関する知識を深めるために最適です。また、最大値・最小値の計算やソートアルゴリズムを実装することで、実践的なプログラミングスキルを向上させることができます。特に、ランダムな整数を生成する部分は、学習者にとって新しい挑戦となり、プログラミングの楽しさを感じられるでしょう。",
  "improvements": [
    "問題文に具体的な出力形式の例を追加して、学習者が期待される出力を明確に理解できるようにする。",
    "ソートアルゴリズムの選択肢を明示し、学習者が自分で選択できるようにすることで、より深い理解を促進する。",
    "エラーハンドリングの要件を追加し、ユーザーが無効な入力をした場合の対処方法を考えさせる。"
  ]
}