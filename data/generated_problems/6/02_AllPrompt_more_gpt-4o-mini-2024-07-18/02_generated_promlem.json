{
  "selected_problem": {
    "problem_id": "No7.c",
    "difficulty": 6,
    "description": "動的に確保した整数の配列を受け取り、その配列の要素の中央値を計算して返す関数を実装してください。中央値を計算するためには、まず配列をソートする必要があります。ソートにはクイックソートを使用してください。配列の動的確保と解放を行い、メイン関数で結果を表示してください。",
    "reason": "学習者は配列と動的メモリ管理を理解しており、基本的なソートアルゴリズムを学ぶための良い機会です。また、中央値を求めるという少し応用的な課題に挑戦することで、プログラミングの理解を深めることが期待できます。",
    "examples": [
      {
        "input": "3 1 4 1 5",
        "output": "中央値は 3 です。",
        "explanation": "5つの要素を持つ配列をソートすると、[1, 1, 3, 4, 5]となり、中央値は3です。"
      },
      {
        "input": "4\n7 3 2 5",
        "output": "中央値は 4.0 です。",
        "explanation": "4つの要素を持つ配列をソートすると、[2, 3, 5, 7]となり、中央値は(3 + 5) / 2 = 4.0です。"
      }
    ],
    "learning_objectives": [
      "動的メモリ確保と解放の実践",
      "配列のソートアルゴリズム（クイックソート）の理解",
      "中央値の概念と計算方法の理解",
      "関数の引数として配列を使用する技術"
    ]
  },
  "reasoning": "この問題は、学習者が動的メモリ管理と配列の操作を理解していることを前提に、中央値という新しい概念を学ぶ機会を提供します。また、クイックソートを使用することで、ソートアルゴリズムの実装に挑戦することができ、プログラミングスキルをさらに向上させることが期待されます。",
  "improvements": [
    "問題文にクイックソートの実装方法のヒントを追加することで、学習者が取り組みやすくなる。",
    "中央値の計算に関する具体的な例を増やし、学習者が理解しやすくする。",
    "動的メモリの解放に関する注意点を問題文に明記し、メモリリークを防ぐ意識を高める。"
  ]
}