{
  "selected_problem": {
    "problem_id": "UniqueID_29",
    "difficulty": 6,
    "description": "動的に確保した配列を使用して、キーボードから入力された整数のリストを逆順にソートし、その後、リスト内の2番目に大きい値を出力するプログラムを作成してください。注意：入力される整数の数は任意であり、入力後に動的に配列を確保する必要があります。",
    "reason": "学習者は動的メモリ確保と扱いにある程度習熟しているが、より高度なアルゴリズム（ソート）の理解が求められる。過去の課題で逆順出力を実装しているため、これを応用し、ソートアルゴリズムの実装に挑戦させることで、理解の深化を図る。",
    "examples": [
      {
        "input": "入力例: 5\n3 1 4 1 5",
        "output": "出力例: 4",
        "explanation": "入力された配列は5, 4, 3, 1, 1に逆順ソートされ、2番目に大きい値は4です。"
      }
    ],
    "learning_objectives": [
      "動的メモリ確保の理解と実践",
      "配列操作およびソートアルゴリズムの実装",
      "条件に基づく選択的な配列要素の出力"
    ]
  },
  "reasoning": "この問題は、学習者が既に動的メモリ確保に習熟していることを前提に、さらにソートアルゴリズムの理解を深めるために適しています。逆順ソートと2番目に大きい値の抽出という2つのステップを通じて、配列操作のスキルを強化し、アルゴリズム的思考を促進します。また、過去の課題で逆順出力を実装しているため、学習者にとって自然な進行となります。",
  "improvements": [
    "問題文において、ソートアルゴリズムの選択肢を明示することで、学習者がどのアルゴリズムを使用するかを考える機会を提供する。",
    "例の入力と出力を増やし、異なるケース（例えば、重複する値や負の値を含む場合）を示すことで、学習者がより多様な状況に対応できるようにする。"
  ]
}