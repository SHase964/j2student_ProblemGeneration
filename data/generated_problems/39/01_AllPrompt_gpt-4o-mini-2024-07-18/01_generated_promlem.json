{
  "selected_problem": {
    "problem_id": "No7.c",
    "difficulty": 6,
    "description": "整数の配列を動的に確保し、配列内の要素を昇順にソートするプログラムを作成してください。また、ソート後の配列を出力し、偶数の個数も表示してください。ただし、ソートには自分で実装したソートアルゴリズム（バブルソートまたは選択ソート）を使用すること。",
    "reason": "学習者は配列の動的確保や基本的な入出力を理解していますが、ソートアルゴリズムの実装には挑戦が必要です。既存の知識を活用しつつ、新しい概念であるアルゴリズムを導入することで、理解を深めることが期待されます。",
    "examples": [
      {
        "input": "5\n3 1 4 2 5",
        "output": "Sorted array:\n1 2 3 4 5\nEven count: 2\n",
        "explanation": "入力として5つの整数を与え、出力としてソートされた配列を表示し、偶数の個数をカウントして表示します。"
      }
    ],
    "learning_objectives": [
      "動的メモリ確保の理解",
      "配列の基本操作",
      "ソートアルゴリズムの実装",
      "条件分岐を用いた偶数のカウント"
    ]
  },
  "reasoning": "この問題は、学習者が動的メモリ確保や配列の基本操作を理解していることを前提に、ソートアルゴリズムの実装という新しい挑戦を提供します。また、偶数のカウントという追加の要素が、条件分岐の理解を深める機会を与えます。",
  "improvements": [
    "問題文に具体的な入力形式や出力形式の例を追加して、学習者が理解しやすくする。",
    "ソートアルゴリズムの選択肢を明示することで、学習者が自分の理解度に応じたアルゴリズムを選べるようにする。",
    "偶数のカウントを行う際の具体的な方法について、ヒントを提供することで学習者のサポートを強化する。"
  ]
}