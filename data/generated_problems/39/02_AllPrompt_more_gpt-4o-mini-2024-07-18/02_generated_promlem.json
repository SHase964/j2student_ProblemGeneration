{
  "selected_problem": {
    "problem_id": "No7.c",
    "difficulty": 6,
    "description": "整数の配列を受け取り、その中の最大値と最小値を求める関数を実装してください。また、配列の要素を逆順で表示する関数も作成し、メイン関数からこれらの関数を呼び出してください。配列は動的に確保し、配列のサイズをユーザーから入力させます。",
    "reason": "学習者は配列や動的メモリ確保の基礎を理解しており、複数の関数を作成して呼び出す能力も確認できたため、少し難易度を上げた応用問題を提案しました。特に、最大値と最小値を求めるアルゴリズムを実装することで、条件分岐やループ処理の理解を深めることが期待できます。",
    "examples": [
      {
        "input": "34\n12\n56\n78\n23",
        "output": "最大値: 78\n最小値: 12\n配列の逆順: 23 78 56 12 34",
        "explanation": "ユーザーが5を入力して5つの整数を与えた場合、最大値の78と最小値の12を求め、逆順に表示する。"
      }
    ],
    "learning_objectives": [
      "動的メモリ確保の理解",
      "配列操作の理解",
      "条件分岐の使用",
      "関数の作成と呼び出し",
      "ループ処理による配列の走査"
    ]
  },
  "reasoning": "この問題は、学習者が既に配列や動的メモリの基礎を理解していることを考慮し、より複雑な操作を通じてスキルを向上させることを目的としています。最大値と最小値を求めるアルゴリズムと、配列の逆順表示という2つの機能を実装することで、学習者は条件分岐やループ処理の理解を深めることができます。",
  "improvements": [
    "問題文に具体的な制約（例えば、配列の要素数の範囲）を追加することで、学習者が考慮すべき条件を明確にする。",
    "サンプル入力に対して、異なるケース（例えば、全ての要素が同じ値の場合や、負の数を含む場合）を追加し、学習者が多様な状況に対応できるようにする。",
    "動的メモリ確保に関するエラーチェックの実装を促すことで、より実践的なスキルを養う。"
  ]
}