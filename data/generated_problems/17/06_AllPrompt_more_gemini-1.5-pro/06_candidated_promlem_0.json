{
  "problem_id": "No7.c",
  "difficulty": 7,
  "description": "与えられた二つの文字列str1とstr2について、str2がstr1の部分文字列であるかどうかを判定する関数isSubstringを作成しなさい。str1内にstr2が含まれる場合は1、含まれない場合は0を返すようにしてください。\n\n関数isSubstringは、以下の仕様を満たす必要があります。\n- str1とstr2を受け取る\n- str2がstr1の部分文字列である場合は1を返し、そうでない場合は0を返す\n- ポインタ演算を使用すること\n- 標準ライブラリ関数(例えば、strstrなど)は使用しないこと\n\n例えば、\nstr1 = \"KisarazuCity\"\nstr2 = \"City\"\nの場合、1を返す。\n\nstr1 = \"KisarazuCity\"\nstr2 = \"Tokyo\"\nの場合、0を返す。",
  "reason": "学習者はNo4.cとNo5.cで動的配列の確保と操作、ループ処理、条件分岐を正しく実装できています。また、No4.cでは配列要素へのアクセス方法を理解し、逆順出力や偶数出力といった応用的な処理も実装できています。No5.cでは2次元配列の動的確保、対角成分の和の計算、転置行列の計算といった、より複雑な処理も正しく実装できています。これらのことから、学習者は配列とポインタの操作、ループ処理、条件分岐といった基本的な概念を理解していると判断できます。しかし、No6.cが未解答であることから、文字列操作やポインタ演算に課題がある可能性があります。そこで、No6.cの模範解答の内容を踏まえつつ、文字列操作とポインタ演算の理解を深めるための応用問題として、部分文字列判定問題を作成しました。この問題は、ポインタ演算、文字列比較、ループ処理、条件分岐といった複数の要素を組み合わせる必要があるため、学習者の理解度を測るのに適しています。また、標準ライブラリ関数を使用しないという制約を設けることで、ポインタ演算のスキルをより深く試すことができます。",
  "examples": [
    {
      "input": "str1 = \"KisarazuCity\", str2 = \"City\"",
      "output": "1",
      "explanation": "str2はstr1の部分文字列であるため、1を返す。"
    },
    {
      "input": "str1 = \"KisarazuCity\", str2 = \"Tokyo\"",
      "output": "0",
      "explanation": "str2はstr1の部分文字列ではないため、0を返す。"
    },
    {
      "input": "str1 = \"apple\", str2 = \"ple\"",
      "output": "1",
      "explanation": "str2はstr1の部分文字列であるため、1を返す。"
    },
    {
      "input": "str1 = \"banana\", str2 = \"orange\"",
      "output": "0",
      "explanation": "str2はstr1の部分文字列ではないため、0を返す。"
    }
  ],
  "learning_objectives": [
    "ポインタ演算の理解",
    "文字列操作の理解",
    "部分文字列判定アルゴリズムの実装",
    "論理的な思考力の強化"
  ]
}