{
  "problem_id": "No7.c",
  "difficulty": 7,
  "description": "与えられた2つの整数の配列を結合し、その結果を新しい配列に格納する関数`merge_arrays`を作成してください。\n\n関数`merge_arrays`は、以下の引数を受け取ります。\n\n* `arr1`: 1つ目の整数配列\n* `size1`: `arr1`の要素数\n* `arr2`: 2つ目の整数配列\n* `size2`: `arr2`の要素数\n\n関数`merge_arrays`は、`arr1`と`arr2`のすべての要素を結合した新しい配列へのポインタを返します。新しい配列は動的に割り当てられ、そのサイズは`size1 + size2`です。\n\n関数の内部でメモリ割り当てエラーが発生した場合、`NULL`ポインタを返す必要があります。\n\nまた、`main`関数で、`merge_arrays`関数を呼び出し、結果を適切に表示し、動的に割り当てられたメモリを解放する必要があります。",
  "reason": "学習者は、1次元配列と2次元配列の動的確保、要素へのアクセス、およびループ処理を理解しています。また、ポインタの基本的な操作にも精通しています。この問題では、2つの配列を扱うことで、より複雑なメモリ管理とポインタ操作を必要とし、学習者の理解をさらに深めることができます。また、エラー処理を含めることで、より堅牢なコードを書くための実践的なスキルを習得させることができます。",
  "examples": [
    {
      "input": "arr1 = {1, 2, 3}, size1 = 3\narr2 = {4, 5, 6}, size2 = 3",
      "output": "Merged array: 1 2 3 4 5 6",
      "explanation": "2つの配列`arr1`と`arr2`が結合され、新しい配列`{1, 2, 3, 4, 5, 6}`が作成されます。"
    },
    {
      "input": "arr1 = {}, size1 = 0\narr2 = {1, 2}, size2 = 2",
      "output": "Merged array: 1 2",
      "explanation": "空の配列と`arr2`が結合され、`arr2`と同じ内容の新しい配列`{1, 2}`が作成されます。"
    },
    {
      "input": "arr1 = {1, 2}, size1 = 2\narr2 = {}, size2 = 0",
      "output": "Merged array: 1 2",
      "explanation": "`arr1`と空の配列が結合され、`arr1`と同じ内容の新しい配列`{1, 2}`が作成されます。"
    }
  ],
  "learning_objectives": [
    "動的メモリ割り当ての理解",
    "ポインタを用いた配列操作",
    "関数への配列の渡し方",
    "メモリ割り当てエラーの処理",
    "複数配列の操作"
  ]
}