{
  "problem_id": "No7.c",
  "difficulty": 7,
  "description": "以下の仕様を満たすC言語プログラムを作成してください。\n\n**仕様:**\n\n1. プログラムはコマンドライン引数として、ファイル名を受け取ります。\n2. 指定されたファイルを読み込み、各行の先頭と末尾の空白文字を取り除き、改行コードを削除します。\n3. 空白文字が削除された各行を、新しいファイルに書き込みます。\n4. 新しいファイルの名前は、元のファイル名に\"_cleaned\"を追加した名前になります。\n5. エラー処理を行い、ファイルが存在しない場合や、ファイルを開くことができない場合は、適切なエラーメッセージを表示します。\n\n**例:**\n\n**入力ファイル (input.txt):**\n\n    This is a test line.\n  Another test line  \n  Yet another line   \n\n**出力ファイル (input_cleaned.txt):**\n\nThis is a test line.\nAnother test line\nYet another line\n\n**ヒント:**\n\n* `fopen()`関数を使用してファイルをオープンします。\n* `fgets()`関数を使用してファイルから一行ずつ読み込みます。\n* `trim()`関数のような関数を作成して、文字列の先頭と末尾の空白文字を削除します。\n* `strlen()`関数を使用して文字列の長さを取得します。\n* `fprintf()`関数を使用して新しいファイルに書き込みます。\n* エラー処理には`perror()`関数を使用できます。",
  "reason": "学習者は動的メモリ確保、配列、文字列操作を理解していることを確認しました。この問題は、ファイル入出力、文字列処理、エラー処理といった、より高度な概念を統合的に扱うことで、学習者の理解度をさらに深めることを目的としています。コマンドライン引数の処理も加えることで、より実践的なプログラミングスキルを養うことができます。",
  "examples": [
    {
      "input": "input.txt (内容は問題文の例を参照)",
      "output": "input_cleaned.txt (内容は問題文の例を参照)",
      "explanation": "入力ファイルから空白文字と改行コードが削除され、クリーンな文字列が新しいファイルに書き込まれます。"
    }
  ],
  "learning_objectives": [
    "ファイル入出力",
    "コマンドライン引数の処理",
    "文字列の先頭と末尾の空白文字の削除",
    "エラー処理",
    "文字列操作関数の活用"
  ]
}