{
  "selected_problem": {
    "problem_id": "No7.c",
    "difficulty": 7,
    "description": "以下の仕様を満たすC言語プログラムを作成してください。\n\n(1)コマンドライン引数として与えられたファイル名を読み込み、ファイルの内容を一行ずつ表示するプログラムを作成します。ファイルが存在しない場合はエラーメッセージを表示し、プログラムを終了します。\n(2)表示する際に、各行の先頭に、行番号を付与してください。\n(3)ファイルの各行の文字数をカウントし、最後に全行の文字数の合計を表示します。\n\nエラー処理、ファイル入出力、文字列操作、コマンドライン引数の処理などを適切に実装してください。",
    "reason": "学習者は、動的メモリ確保、配列操作、ランダム数値生成、偶数判定、2次元配列操作、転置行列計算、文字列結合といったC言語の基本的なプログラミングスキルを習得しています。そのため、ファイル入出力、エラー処理、コマンドライン引数処理といった、より実践的で複雑な要素を含む問題を提示することで、学習者のスキルをさらに向上させることを目指します。この問題は、これらの既存のスキルを統合的に活用することを要求し、より高度なプログラミング能力の育成を促します。",
    "examples": [
      {
        "input": "sample.txtの内容：\nLine1\nLine2\nLine3",
        "output": "1: Line1\n2: Line2\n3: Line3\n全文字数: 15",
        "explanation": "sample.txtというファイルを読み込み、各行の先頭に番号をつけて表示し、最後に全文字数を表示する。"
      },
      {
        "input": "nonexistent.txt",
        "output": "エラー: ファイルが存在しません。",
        "explanation": "存在しないファイル名を指定した場合、エラーメッセージを表示する。"
      }
    ],
    "learning_objectives": [
      "ファイル入出力関数の利用",
      "エラー処理の実装",
      "コマンドライン引数の処理",
      "文字列操作の高度化",
      "標準エラー出力への出力"
    ]
  },
  "reasoning": "3つの問題候補の中で、この問題が学習者の既存スキルを最も効果的に統合し、高度なプログラミング能力の育成に繋がるため選択しました。ファイル入出力、エラー処理、コマンドライン引数処理は、実践的なプログラミングにおいて必須のスキルであり、この問題を通して習得することで、学習者の実力向上に大きく貢献すると考えられます。難易度も適切であり、挑戦しがいのある問題となっています。",
  "improvements": [
    "エラーメッセージをより詳細にする(例: エラー番号の表示、エラー発生箇所を特定するための情報)",
    "ファイル名に不正な文字が含まれている場合のエラー処理を追加する",
    "大規模なファイルにも対応できるよう、メモリ管理を最適化する",
    "入力ファイルのエンコーディングを指定できるようにする"
  ]
}