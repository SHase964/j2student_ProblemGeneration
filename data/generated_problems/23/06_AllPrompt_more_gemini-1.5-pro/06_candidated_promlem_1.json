{
  "problem_id": "No7.c",
  "difficulty": 7,
  "description": "二次元配列（行列）を扱うプログラムを作成し、以下の機能を実装してください。\n1. キーボードから行列の行数と列数を入力を受け取ります。\n2. 入力された行数と列数で二次元配列を動的に確保し、乱数で初期化します。\n3. 二つの行列の積を計算する関数を作成し、計算結果を別の二次元配列に格納します。\n4. 結果の行列の内容を表示します。\n\n行列の積計算は、行列Aの列数と行列Bの行数が等しい場合にのみ可能です。\n\nプログラムは、行列の積が計算できない場合、エラーメッセージを表示して終了するようにしてください。",
  "reason": "学習者は、一次元配列の動的確保、乱数による初期化、要素の操作、逆順出力、偶数要素の抽出など、配列の基本的な操作を理解し、正しく実装できています。また、二次元配列についても動的確保、要素へのアクセス、転置といった操作を理解しています。さらに、文字列の結合においても、動的確保を用いて正しく実装しています。これらのことから、学習者はポインタと配列操作に習熟していると判断できます。\n\n次のステップとして、二次元配列の応用問題である行列の積計算に挑戦させることで、より高度な配列操作とアルゴリズムの理解を深めることができます。この問題は、行列の積計算に必要な条件の確認、二次元配列の動的確保と操作、そして適切なアルゴリズムの実装を必要とするため、学習者の更なる成長を促すのに適切な難易度であると考えられます。",
  "examples": [
    {
      "input": "行数: 2\n列数: 3\n\n行数: 3\n列数: 2",
      "output": "行列A\n1 2 3\n4 5 6\n\n行列B\n7 8\n9 10\n11 12\n\n行列A x 行列B\n58 64\n139 154",
      "explanation": "2x3の行列Aと3x2の行列Bの積を計算し、2x2の行列を出力しています。"
    }
  ],
  "learning_objectives": [
    "二次元配列の動的確保",
    "行列の積計算のアルゴリズム実装",
    "エラー処理の実装"
  ]
}