{
  "selected_problem": {
    "problem_id": "No7.c",
    "difficulty": 6,
    "description": "動的に確保した整数配列に対して、ユーザーから数値を入力し、その数値が配列に存在するかどうかを判定するプログラムを作成してください。存在する場合はそのインデックスを表示し、存在しない場合は「Not found」と表示します。",
    "reason": "学習者は動的配列の使用や基本的な配列操作に慣れており、条件分岐やループ処理も理解しているため、少し難易度を上げて配列内検索を取り入れた問題を作成しました。この問題は、学習者が既に持っている知識を活かしつつ、新しい概念を学ぶ機会を提供します。",
    "examples": [
      {
        "input": "5\n10\n20\n30\n40\n50\n30",
        "output": "30 is found at index 2",
        "explanation": "ユーザーが配列に含まれる30を入力したため、インデックス2が表示される。"
      },
      {
        "input": "4\n1\n2\n3\n4\n5\n6",
        "output": "Not found",
        "explanation": "ユーザーが配列に含まれない6を入力したため、「Not found」が表示される。"
      }
    ],
    "learning_objectives": [
      "動的メモリ確保の理解",
      "配列の要素へのアクセス",
      "条件分岐の使用",
      "ループ処理の応用",
      "基本的な入力処理のスキル"
    ]
  },
  "reasoning": "この問題は、学習者が動的メモリ管理や配列操作に関する基礎知識を持っていることを前提にしており、ポインタを使った配列操作や条件分岐、ループ処理を組み合わせることで、実践的なプログラミングスキルを向上させることができます。また、配列内検索という新しい概念を導入することで、学習者の理解を深めることが期待できます。",
  "improvements": [
    "問題文に具体的な入力形式の例を追加して、学習者が理解しやすくする。",
    "出力形式を明確にするために、例における出力のフォーマットを統一する。",
    "エラーハンドリングの要素を追加し、無効な入力に対する対応を考慮する。"
  ]
}