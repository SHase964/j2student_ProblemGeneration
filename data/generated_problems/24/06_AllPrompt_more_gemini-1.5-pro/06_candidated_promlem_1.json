{
  "problem_id": "No7.c",
  "difficulty": 7,
  "description": "可変長の文字列を複数入力し、それらを連結した1つの文字列を返す関数を作成してください。入力される文字列の数は不定であり、最後の文字列はNULLポインタで示されます。連結後の文字列は動的にメモリ領域を確保し、その先頭ポインタを返すようにしてください。メモリリークが発生しないように注意深く設計してください。",
  "reason": "学習者は、No4.c、No5.c、No6.cの3問を解答しています。\nNo4.cでは、動的配列確保、乱数生成、配列操作、条件分岐、反復処理といった基本的なC言語のスキルを示しています。\nNo5.cでは、2次元動的配列の確保と操作、行列計算、転置行列の計算といった、より高度な配列操作とアルゴリズムの理解を示しています。\nNo6.cでは、文字列操作、動的メモリ確保、ポインタ操作といった文字列処理の基本的なスキルを示しています。しかし、文字列長の計算に誤りがあり、より効率的な方法を理解していない可能性があります。\nこれらの解答から、学習者はC言語の基本的な構文、配列操作、ポインタ操作、メモリ管理について理解していると考えられます。しかし、可変長引数や複雑なメモリ管理には慣れていない可能性があります。そこで、可変長の文字列連結問題を提示することで、動的メモリ管理、文字列操作、ポインタ操作、可変長引数への理解を深め、より実践的なプログラミングスキルを習得させることを目指します。",
  "examples": [
    {
      "input": "apple\\0banana\\0orange\\0NULL",
      "output": "applebananaorange",
      "explanation": "3つの文字列\"apple\"、\"banana\"、\"orange\"が順に入力され、それらが連結された結果が出力されます。"
    },
    {
      "input": "hello\\0world\\0NULL",
      "output": "helloworld",
      "explanation": "2つの文字列\"hello\"、\"world\"が順に入力され、それらが連結された結果が出力されます。"
    },
    {
      "input": "C\\0Programming\\0is\\0fun\\0NULL",
      "output": "CProgrammingisfun",
      "explanation": "4つの文字列\"C\"、\"Programming\"、\"is\"、\"fun\"が順に入力され、それらが連結された結果が出力されます。"
    }
  ],
  "learning_objectives": [
    "可変長引数の理解",
    "文字列連結",
    "動的メモリ確保と解放",
    "ポインタ操作",
    "メモリリークの防止"
  ]
}