{
  "selected_problem": {
    "problem_id": "No7.c",
    "difficulty": 6,
    "description": "3つの整数からなる配列を作成し、それを昇順にソートして表示するプログラムを作成してください。動的メモリ確保を用いて配列を実装し、ソートにはバブルソートを利用してください。また、ソート済みの配列を逆順に表示する機能も追加してください。",
    "reason": "学習者は配列の動的確保や基本的な配列操作を理解しているが、ソートアルゴリズムやより複雑な配列操作に関する問題への取り組みはまだしていない。新しい概念としてバブルソートを導入し、既存の配列操作の知識を活用することで学習の幅を広げることができると判断した。",
    "examples": [
      {
        "input": "配列のサイズ: 3\n配列の要素: 3 1 2",
        "output": "昇順: 1 2 3\n逆順: 3 2 1",
        "explanation": "入力された配列[3, 1, 2]を昇順にソートすると[1, 2, 3]となり、それを逆順に表示すると[3, 2, 1]になります。"
      }
    ],
    "learning_objectives": [
      "動的メモリ確保の理解",
      "バブルソートアルゴリズムの実装",
      "配列の逆順表示",
      "ポインタを用いた配列操作"
    ]
  },
  "reasoning": "この問題は、学習者が既に理解している動的メモリ確保と基本的な配列操作の知識を活用しつつ、新たにバブルソートという基本的なソートアルゴリズムを学ぶ機会を提供します。これにより、学習者は配列の操作に関する理解を深め、ソートアルゴリズムの基礎を学ぶことができます。また、逆順表示の機能を追加することで、配列操作の応用力を高めることができます。",
  "improvements": [
    "問題文において、動的メモリの解放についても言及し、メモリリークを防ぐ重要性を強調する。",
    "バブルソートの効率性についての簡単な説明を追加し、他のソートアルゴリズムとの比較を促す。",
    "配列サイズを動的に変更する機能を追加し、より柔軟なプログラム設計を促す。"
  ]
}