{
  "problem_id": "No7.c",
  "difficulty": 7,
  "description": "与えられたテキストファイルから、特定の単語を検索し、その単語の出現回数をカウントするプログラムを作成してください。プログラムは、ファイル名と検索対象の単語をコマンドライン引数として受け取ります。ファイルが存在しない場合や、ファイルを開くことができない場合は、適切なエラーメッセージを表示してください。検索対象の単語は、大文字と小文字を区別せずにカウントしてください。\n\n**実装要件**\n\n* ファイル入出力関数 (`fopen`, `fclose`, `fgetc`, `fgets`など) を使用すること\n* 文字列比較関数 (`strcmp`, `strcasecmp`など) を使用すること\n* 動的メモリ確保 (`malloc`, `realloc`, `free`) を使用して、必要に応じてメモリを確保・解放すること\n* エラー処理を適切に行うこと\n\n**評価基準**\n\n* プログラムが正しく動作すること\n* エラー処理が適切に行われていること\n* メモリリークがないこと\n* コードが読みやすく、理解しやすいこと",
  "reason": "学習者は、動的メモリ確保、配列、文字列操作、ファイル入出力、エラー処理といったC言語の基礎的な概念を理解していることを示しています。そのため、これらの知識を統合し、さらに応用的な課題として、コマンドライン引数の処理や大文字小文字を区別しない文字列比較などを含む問題を作成しました。難易度は、これらの要素を考慮して7と設定しました。",
  "examples": [
    {
      "input": "filename: sample.txt\nword: hello",
      "output": "The word \"hello\" appears 3 times in the file.",
      "explanation": "sample.txtというファイルに\"hello\"という単語が3回出現した場合の出力例です。"
    },
    {
      "input": "filename: nonexistent.txt\nword: world",
      "output": "Error: Could not open file nonexistent.txt.",
      "explanation": "存在しないファイル名を指定した場合の出力例です。"
    }
  ],
  "learning_objectives": [
    "ファイル入出力",
    "コマンドライン引数の処理",
    "大文字小文字を区別しない文字列比較",
    "エラー処理",
    "動的メモリ管理"
  ]
}