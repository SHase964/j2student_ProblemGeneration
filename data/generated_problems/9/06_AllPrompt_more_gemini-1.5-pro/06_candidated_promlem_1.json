{
  "problem_id": "No7.c",
  "difficulty": 7,
  "description": "二次元配列（行列）を扱う関数を作成し、以下の操作を実現するプログラムを作成してください。\n1. キーボードから行列の次元（行数と列数）を入力する。\n2. 入力された次元に従って、動的に二次元配列を確保する。\n3. 各要素に0から99までの乱数を代入する。\n4. 行列の各行の合計値を計算し、別の一次元配列に格納する。\n5. 元の行列と各行の合計値を表示する。\n6. 確保したメモリを解放する。",
  "reason": "学習者は、一次元配列の動的確保、乱数生成、配列要素の操作、逆順出力、偶数判定といった基本的なC言語のスキルを習得しています。また、二次元配列の動的確保、要素へのアクセス、転置行列の計算も理解しています。文字列操作、ポインタ演算、メモリ管理に関しても正しく実装できています。\n\nこの問題では、これらの既存の知識を組み合わせ、さらに発展させることで、より複雑なプログラムを構築する能力を養います。具体的には、二次元配列と一次元配列を組み合わせて使用し、行ごとの処理を行うことで、配列操作の理解を深めます。また、メモリ管理の重要性を再確認し、適切なメモリ解放を行うことで、安全なプログラム作成能力を強化します。",
  "examples": [
    {
      "input": "3\n3",
      "output": "Matrix:\n75 32 98 \n12 54 67 \n87 23 45 \n\nSum of each row:\n205\n133\n155",
      "explanation": "3行3列の行列が入力され、各要素に乱数が代入されます。各行の合計値が計算され、表示されます。"
    },
    {
      "input": "2\n4",
      "output": "Matrix:\n3 27 88 91 \n15 42 67 3 \n\nSum of each row:\n209\n127",
      "explanation": "2行4列の行列が入力され、各要素に乱数が代入されます。各行の合計値が計算され、表示されます。"
    }
  ],
  "learning_objectives": [
    "二次元配列の動的確保と操作",
    "一次元配列の動的確保と操作",
    "メモリ管理",
    "配列要素の計算と処理",
    "乱数生成",
    "入出力処理"
  ]
}