{
  "problem_id": "No7.c",
  "difficulty": 7,
  "description": "与えられた2つの文字列 (str1, str2) から共通の文字を抽出し、新たな文字列として返す関数 `common_chars` を作成してください。抽出した文字列は重複を除去し、アルファベット順にソートされている必要があります。\n\n関数 `common_chars` は以下の仕様を満たす必要があります。\n\n- 引数:\n    - `char *str1`: 1つ目の文字列\n    - `char *str2`: 2つ目の文字列\n- 戻り値:\n    - `char *`: 共通の文字列 (動的に確保されたメモリ領域へのポインタ)\n    - 共通の文字がない場合は、空文字列を返す\n\n文字列はNULL終端されていると仮定して構いません。\n\n例えば、str1 が \"abracadabra\" で、str2 が \"barbarian\" の場合、共通の文字列は \"aarbb\" です。これをソートし、重複を除去すると \"abr\" となります。",
  "reason": "学習者は、No4.c と No5.c において、動的メモリ確保、配列操作、ループ処理、条件分岐といった基本的なC言語のスキルを習得していることが確認されました。No6.c は未解答ですが、問題内容は文字列操作に関連しており、学習者のポテンシャルを評価するために、文字列操作を応用した問題を提示します。\n\nこの問題は、No6.c の文字列結合よりも複雑な文字列操作を必要とし、さらにソートと重複除去という新たな要素を含んでいます。これにより、学習者は既存の知識を応用しながら、新たなアルゴリズムの設計と実装に挑戦することができます。",
  "examples": [
    {
      "input": "str1 = \"abracadabra\", str2 = \"barbarian\"",
      "output": "\"abr\"",
      "explanation": "両方の文字列に含まれる文字 'a', 'b', 'r' を抽出し、ソート、重複除去した結果です。"
    },
    {
      "input": "str1 = \"hello\", str2 = \"world\"",
      "output": "\"lo\"",
      "explanation": "\"hello\" と \"world\" の共通文字は 'l' と 'o' です。ソートすると \"lo\" となります。"
    },
    {
      "input": "str1 = \"apple\", str2 = \"banana\"",
      "output": "\"a\"",
      "explanation": "共通文字は 'a' のみです。"
    },
    {
      "input": "str1 = \"dog\", str2 = \"cat\"",
      "output": "\"\"",
      "explanation": "共通文字がないため、空文字列を返します。"
    }
  ],
  "learning_objectives": [
    "文字列操作",
    "動的メモリ確保",
    "ソート",
    "重複除去",
    "ポインタ操作"
  ]
}