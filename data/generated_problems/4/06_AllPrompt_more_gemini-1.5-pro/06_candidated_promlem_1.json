{
  "problem_id": "No7.c",
  "difficulty": 7,
  "description": "与えられた2つの整数の配列（array1とarray2）を結合し、新たな配列を作成する関数`merge_arrays`を作成してください。\n\n関数`merge_arrays`は、以下の引数を受け取ります。\n- `array1`: 整数の配列\n- `size1`: `array1`の要素数\n- `array2`: 整数の配列\n- `size2`: `array2`の要素数\n\nこの関数は、`array1`と`array2`のすべての要素を含む新しい配列を動的に割り当て、そのポインタを返します。新しい配列のサイズは`size1 + size2`です。\n\nまた、この問題では、メモリリークを防ぐために、不要になったメモリを解放する処理も適切に実装する必要があります。\n\n例えば、`array1`が`{1, 2, 3}`、`size1`が3、`array2`が`{4, 5, 6}`、`size2`が3の場合、返される配列は`{1, 2, 3, 4, 5, 6}`となります。",
  "reason": "学習者は、1次元配列と2次元配列の動的確保、要素へのアクセス、ループ処理、条件分岐など、C言語の基本的な概念を理解し、正しく使用できています。また、`malloc`関数と`free`関数を使用して、メモリを動的に確保および解放する方法も理解しています。\n\nこれまでの問題では、配列の操作は個々の配列内で行われていましたが、この新しい問題では、2つの配列を結合する操作を要求することで、配列操作の理解を深め、応用力を試します。\n\nさらに、メモリリークを防ぐための適切なメモリ管理も要求することで、安全なC言語プログラミングの意識を高めます。",
  "examples": [
    {
      "input": "array1 = {1, 2, 3}, size1 = 3, array2 = {4, 5, 6}, size2 = 3",
      "output": "{1, 2, 3, 4, 5, 6}",
      "explanation": "2つの配列`array1`と`array2`が結合され、新しい配列が作成されます。"
    },
    {
      "input": "array1 = {10, 20}, size1 = 2, array2 = {30, 40, 50}, size2 = 3",
      "output": "{10, 20, 30, 40, 50}",
      "explanation": "異なるサイズの配列も正しく結合されます。"
    }
  ],
  "learning_objectives": [
    "動的メモリ割り当ての理解",
    "ポインタの操作",
    "配列の操作",
    "メモリ管理"
  ]
}