{
  "selected_problem": {
    "problem_id": "No7.c",
    "difficulty": 4,
    "description": "与えられた整数の配列を昇順にソートし、さらにソート後の配列から重複する要素を削除して、ユニークな要素のみを持つ配列を出力するプログラムを実装してください。配列は動的に確保し、ソートにはバブルソートを用いてください。",
    "reason": "学習者は配列の動的確保と基本的な配列操作に関する理解を示していますが、ソートアルゴリズムや重複削除といった少し上級の操作は未経験です。この問題は、既存のスキルを活用しつつ、新たなアルゴリズムの理解を促進します。",
    "examples": [
      {
        "input": "5\n3 1 2 3 2",
        "output": "1 2 3",
        "explanation": "入力された配列[3, 1, 2, 3, 2]は、ソート後に[1, 2, 2, 3, 3]となり、重複を削除すると[1, 2, 3]になります。"
      }
    ],
    "learning_objectives": [
      "動的メモリ確保と解放の理解",
      "バブルソートの実装",
      "重複要素の検出と削除",
      "配列の操作と出力"
    ]
  },
  "reasoning": "この問題は、学習者の現在のスキルセットに適しており、動的メモリ確保と基本的な配列操作の理解を深めることができます。また、バブルソートと重複削除という新しい概念を導入することで、学習者のスキルを次のレベルに引き上げることができます。難易度も適切であり、学習者が挑戦しつつも達成可能な範囲にあります。",
  "improvements": [
    "問題文において、動的メモリの解放についても明示的に指示を追加することで、メモリリークの防止を意識させる。",
    "バブルソートの効率性についての考察を促す追加課題を設けることで、アルゴリズムの効率性に対する理解を深める。",
    "重複削除の際に、配列のサイズ変更をどのように行うかについてのヒントを提供することで、実装の助けとする。"
  ]
}