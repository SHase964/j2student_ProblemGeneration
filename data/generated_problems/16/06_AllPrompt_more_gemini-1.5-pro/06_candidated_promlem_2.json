{
  "problem_id": "No7.c",
  "difficulty": 7,
  "description": "キーボードから入力された任意の文字列を逆順に表示するプログラムを作成しなさい。ただし、文字列を格納するためのメモリ領域は動的に確保し、文字列の入力にはfgets関数を使用すること。また、文字列を逆順にする処理は、独自の関数reverse_stringを作成して実装すること。\n\n入力される文字列は最大100文字とする。",
  "reason": "学習者はNo4.cで動的メモリ確保、配列操作、ループ処理、条件分岐を正しく使えている。No5.cでは2次元配列の動的確保に躓いているが、1次元配列の操作は理解している。No6.cは未解答だが、文字列操作の基本的な問題である。\n\nこれらの解答状況から、学習者は配列とポインタの概念を理解しているものの、2次元配列や文字列操作には課題があると推測される。そこで、文字列操作に焦点を当てつつ、動的メモリ確保と独自の関数作成を組み合わせた応用問題を提示することで、学習者の理解を深める。fgets関数の使用を指定することで、安全な文字列入力を促す。",
  "examples": [
    {
      "input": "Kisarazu",
      "output": "uzarasiK",
      "explanation": "入力文字列\"Kisarazu\"が逆順に\"uzarasiK\"と出力される。"
    },
    {
      "input": "programming",
      "output": "gnimmargorp",
      "explanation": "入力文字列\"programming\"が逆順に\"gnimmargorp\"と出力される。"
    }
  ],
  "learning_objectives": [
    "fgets関数を用いた安全な文字列入力",
    "動的メモリ確保",
    "文字列操作",
    "独自関数の作成",
    "ポインタ操作"
  ]
}