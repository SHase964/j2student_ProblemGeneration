{
  "selected_problem": {
    "problem_id": "No7.c",
    "difficulty": 6,
    "description": "動的に確保した整数型の配列に対して、配列の要素をソートするプログラムを作成してください。ソート方法はバブルソートを使用し、ソート前後の配列を表示してください。さらに、ソートされた配列の中央値を計算して表示すること。",
    "reason": "学習者は動的メモリ確保や配列操作について理解しているが、ソートアルゴリズムや中央値の計算に関する知識を深める必要があるため、これらの新しい概念を導入しつつ、既存の知識の応用を促す問題を設計しました。",
    "examples": [
      {
        "input": "43 21 56 78 12\n",
        "output": "Before sorting: 43 21 56 78 12\nAfter sorting: 12 21 43 56 78\nMedian: 43\n",
        "explanation": "最初に5つの整数を入力し、これをバブルソートでソートし、ソート前後の配列と中央値を表示します。"
      }
    ],
    "learning_objectives": [
      "動的メモリの確保と解放",
      "配列の要素へのアクセス",
      "バブルソートアルゴリズムの実装",
      "中央値の計算方法"
    ]
  },
  "reasoning": "この問題は、学習者が動的メモリ管理や配列操作の基礎を理解していることを前提に、ソートアルゴリズムと中央値の計算という新しい概念を導入することで、さらなるスキル向上を促すために選択されました。また、実装の過程で配列の操作に関する理解を深めることができるため、学習者にとって有意義な課題です。",
  "improvements": [
    "問題文に具体的な入力形式の例を追加して、学習者が入力方法を理解しやすくする。",
    "バブルソート以外のソートアルゴリズム（例：クイックソートやマージソート）を選択肢として提示し、学習者に選ばせることで、さらなる理解を促す。",
    "中央値の計算方法についての詳細な説明を追加し、学習者が理解しやすいようにする。"
  ]
}