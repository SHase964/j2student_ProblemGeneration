{
  "problem_id": "No7.c",
  "difficulty": 7,
  "description": "与えられた2つの文字列str1とstr2を比較し、str1がstr2より辞書順で前にある場合は-1、等しい場合は0、後にある場合は1を返す関数`strcmp_custom`を作成してください。ただし、標準ライブラリ関数`strcmp`は使用せず、ポインタ演算と文字コードの比較のみで実装してください。\n\n例えば、\nstr1 = \"apple\"\nstr2 = \"banana\"\nの場合、\"apple\"は\"banana\"より辞書順で前にあるので、-1を返します。\n\nstr1 = \"orange\"\nstr2 = \"orange\"\nの場合、両者は等しいので、0を返します。\n\nstr1 = \"grape\"\nstr2 = \"apple\"\nの場合、\"grape\"は\"apple\"より辞書順で後にあるので、1を返します。",
  "reason": "学習者はNo4.cとNo5.cで動的配列の確保と操作、ポインタの利用、ループ処理、条件分岐といった基本的なC言語のスキルを習得していることがわかります。No6.cは未解答ですが、文字列操作に関する問題です。これらの解答状況から、学習者はポインタ操作に慣れているものの、文字列操作や文字コードの比較といった文字列処理に関する理解を深める必要があると判断しました。そこで、標準ライブラリ関数strcmpを使わずに文字列比較を行う問題を提示することで、文字列処理の理解度向上とポインタ演算の応用力の強化を図ります。",
  "examples": [
    {
      "input": "str1 = \"apple\", str2 = \"banana\"",
      "output": "-1",
      "explanation": "\"apple\"は\"banana\"より辞書順で前にあるため。"
    },
    {
      "input": "str1 = \"orange\", str2 = \"orange\"",
      "output": "0",
      "explanation": "両者は等しいため。"
    },
    {
      "input": "str1 = \"grape\", str2 = \"apple\"",
      "output": "1",
      "explanation": "\"grape\"は\"apple\"より辞書順で後にあるため。"
    }
  ],
  "learning_objectives": [
    "ポインタ演算の理解",
    "文字コードの比較",
    "文字列処理の理解",
    "辞書順の概念の理解",
    "アルゴリズムの設計能力"
  ]
}