{
  "selected_problem": {
    "problem_id": "No7.c_revised",
    "difficulty": 7,
    "description": "キーボードから入力された自然数nに対し、n行n列の行列を動的に確保し、その要素に1からn*nまでの整数を順番に代入するプログラムを作成してください。その後、その行列を表示し、さらに各行の合計値と各列の合計値を表示するプログラムを作成してください。メモリリークを防ぐために、動的に確保したメモリは適切に解放する必要があります。エラー処理として、nが0以下の場合の処理も実装してください。",
    "reason": "学習者は動的メモリ確保と配列操作に習熟しており、2次元配列を用いた行列操作、行と列の合計値計算といった応用的な課題に対応できる能力を示していると分析されています。この問題は、これらの能力を総合的に試すのに適しており、さらにエラー処理の追加により、より実践的なプログラミングスキルを養うことを目指します。各行・各列の合計値計算は、配列のインデックス操作とループ処理の理解度を測るのに有効です。メモリ管理の徹底も学習目標に含まれるため、メモリリークの防止についても確認できます。",
    "examples": [
      {
        "input": "3",
        "output": "1 2 3\n4 5 6\n7 8 9\n行の合計値: 6 15 24\n列の合計値: 12 15 18",
        "explanation": "入力されたn=3に対し、3行3列の行列が作成され、1から9までの整数が順番に代入されます。その後、各行の合計値(6, 15, 24)と各列の合計値(12, 15, 18)が表示されます。"
      },
      {
        "input": "0",
        "output": "エラー: nは正の整数でなければなりません。",
        "explanation": "nが0以下の場合、エラーメッセージが表示されます。"
      }
    ],
    "learning_objectives": [
      "2次元配列の動的メモリ確保と解放",
      "2次元配列へのデータの順次代入",
      "行列の表示",
      "各行の合計値の計算",
      "各列の合計値の計算",
      "ループ処理",
      "インデックス操作",
      "メモリリークの防止",
      "エラー処理"
    ]
  },
  "reasoning": "問題3は、学習者の現在の能力レベルに最も適しており、学習目標も明確で、実装可能性も高いと判断しました。特に、各行と各列の合計値を求める部分は、配列のインデックス操作とループ処理の理解度を効果的に評価でき、動的メモリ確保と解放処理を含めることで、メモリ管理の知識の定着にも繋がります。エラー処理の追加により、より実践的な問題になります。問題1と2は、難易度が高い上に、学習目標が問題3に比べてやや重複しているため、問題3を選択しました。",
  "improvements": [
    "エラー処理の追加: nが0以下の場合の処理を追加することで、より堅牢なプログラムを作成する能力を評価できるようにしました。",
    "出力形式の明確化: 出力形式をより明確にすることで、プログラムの正誤判定を容易にしました。"
  ]
}