{
  "problem_id": "No7.c",
  "difficulty": 7,
  "description": "与えられた2つの整数の配列（array1とarray2）を連結し、新たな配列を動的に生成して返す関数`concatenate_arrays`を作成してください。\n\n関数`concatenate_arrays`は、以下の引数を受け取ります。\n\n- `array1`: 1つ目の整数配列\n- `size1`: `array1`の要素数\n- `array2`: 2つ目の整数配列\n- `size2`: `array2`の要素数\n\n関数は、`array1`と`array2`の要素をこの順に連結した新たな配列を動的に生成し、そのポインタを返します。また、新たな配列の要素数を格納する`size3`へのポインタも引数として受け取ります。\n\n例:\n`array1` = {1, 2, 3}, `size1` = 3\n`array2` = {4, 5}, `size2` = 2\n\n戻り値: {1, 2, 3, 4, 5}, `size3` = 5",
  "reason": "学習者は、1次元配列と2次元配列の動的確保、要素へのアクセス、ループ処理、条件分岐といった基本的なC言語のスキルを習得しています。また、文字列操作や配列の逆順出力なども理解していることから、複数の配列を扱う応用問題に挑戦することができます。この問題は、2つの配列を連結するという課題を通して、動的メモリ確保と配列操作の理解を深めることを目的としています。",
  "examples": [
    {
      "input": "`array1` = {1, 2, 3}, `size1` = 3\n`array2` = {4, 5}, `size2` = 2",
      "output": "{1, 2, 3, 4, 5}",
      "explanation": "`array1`と`array2`の全要素が連結された新たな配列が生成される。"
    },
    {
      "input": "`array1` = {}, `size1` = 0\n`array2` = {1, 2}, `size2` = 2",
      "output": "{1, 2}",
      "explanation": "空の配列と`array2`が連結されるため、結果は`array2`と同じになる。"
    },
    {
      "input": "`array1` = {1, 2}, `size1` = 2\n`array2` = {}, `size2` = 0",
      "output": "{1, 2}",
      "explanation": "`array1`と空の配列が連結されるため、結果は`array1`と同じになる。"
    }
  ],
  "learning_objectives": [
    "動的メモリ確保の理解",
    "配列操作の習熟",
    "関数定義と引数渡し",
    "ポインタの理解"
  ]
}