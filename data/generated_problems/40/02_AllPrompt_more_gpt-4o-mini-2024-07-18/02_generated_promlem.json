{
  "selected_problem": {
    "problem_id": "No7.c",
    "difficulty": 6,
    "description": "整数の配列を受け取り、その配列内の最大値と最小値を求める関数を実装してください。配列のサイズは動的に確保し、メモリリークを回避するために、使用後は必ず解放してください。",
    "reason": "学習者は動的メモリ確保や配列操作を理解しているため、さらに難易度を上げて関数の作成とメモリ管理を取り入れることにしました。最大値と最小値を求めることで、アルゴリズム的思考を促進します。",
    "examples": [
      {
        "input": "3 1 4 1 5",
        "output": "最大値: 5\n最小値: 1",
        "explanation": "配列の要素が3, 1, 4, 1, 5の場合、最大値は5、最小値は1となります。"
      }
    ],
    "learning_objectives": [
      "動的メモリ管理の理解",
      "配列の操作と要素の検索",
      "関数の引数として配列を受け取る技術",
      "メモリリークを防ぐためのfree()の使用"
    ]
  },
  "reasoning": "この問題は、学習者が動的メモリ管理と配列操作の理解を深めるために最適です。最大値と最小値を求めるという具体的なタスクは、実践的なスキルを養うのに役立ちます。また、メモリリークを防ぐための解放処理を求めることで、より実践的なプログラミングスキルを身につけることができます。",
  "improvements": [
    "問題文に具体的なメモリ管理の手順を示すと、学習者がより理解しやすくなるかもしれません。",
    "入力形式や出力形式について、より詳細な説明を追加することで、学習者の混乱を避けることができるでしょう。",
    "テストケースを増やし、異なるサイズや値の配列に対する期待される出力を示すことで、学習者の理解を深めることができます。"
  ]
}