{
  "problem_id": "No7.c",
  "difficulty": 7,
  "description": "キーボードから入力された任意の文字列を動的に確保された連結リストに格納し、リスト全体を逆順に表示するプログラムを作成しなさい。\n各ノードは文字列へのポインタと次のノードへのポインタを持つ構造体として定義すること。\n入力の終了条件は、空行（改行のみ）の入力とする。\n\n[制約]\n入力文字列の最大長は100文字とする。\n\n[入力例]\nKisarazu\nCity\n\n[出力例]\nCity\nKisarazu",
  "reason": "学習者は、1次元配列、2次元配列の動的確保、文字列操作、ポインタ操作を理解し、正しくプログラムを作成できている。\nそこで、次のステップとして、構造体とポインタを組み合わせた連結リストの操作を課題とする。\nこれは、データ構造の理解を深めるための重要なステップであり、動的メモリ確保とポインタ操作の応用力を試すのに適している。\nさらに、リストを逆順に表示することで、ポインタ操作の理解度をより深く確認できる。",
  "examples": [
    {
      "input": "apple\norange\nbanana\n\n",
      "output": "banana\norange\napple",
      "explanation": "3つの文字列\"apple\", \"orange\", \"banana\"を入力し、それぞれが連結リストのノードに格納される。その後、リストが逆順にたどられ、\"banana\", \"orange\", \"apple\"の順に出力される。"
    },
    {
      "input": "hello\nworld\n\n",
      "output": "world\nhello",
      "explanation": "2つの文字列\"hello\", \"world\"を入力し、それぞれが連結リストのノードに格納される。その後、リストが逆順にたどられ、\"world\", \"hello\"の順に出力される。"
    }
  ],
  "learning_objectives": [
    "構造体の定義と利用",
    "連結リストの操作",
    "動的なメモリ確保",
    "ポインタ操作",
    "逆順処理"
  ]
}