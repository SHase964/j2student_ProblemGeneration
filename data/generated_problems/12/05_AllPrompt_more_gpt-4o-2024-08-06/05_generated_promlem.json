{
  "selected_problem": {
    "problem_id": "No7.c",
    "difficulty": 6,
    "description": "3つの整数を入力として受け取り、その最大公約数（GCD）を計算するプログラムを作成してください。ユークリッドの互除法を利用して計算すること。GCDの計算は関数として実装し、複数の関数を使って構造化してください。",
    "reason": "学習者は動的メモリの使用や配列の操作、2次元配列といった基本的なスキルを持っているが、関数の抽象化や再利用性の高いコードの構築が未熟である可能性が見受けられます。また、文字列操作の問題は未回答であったため、文字列以外の基礎的なアルゴリズムの理解を深める問題を提供しました。この問題は、関数を用いて問題を分割し、アルゴリズムを意識したプログラム構築を学ぶことを目的としています。",
    "examples": [
      {
        "input": "12 18 24",
        "output": "6",
        "explanation": "12と18と24の最大公約数は6です。"
      },
      {
        "input": "7 14 21",
        "output": "7",
        "explanation": "7と14と21の最大公約数は7です。"
      }
    ],
    "learning_objectives": [
      "関数の設計と実装",
      "ユークリッドの互除法によるGCDの計算",
      "複数の関数を用いたプログラムの構造化"
    ]
  },
  "reasoning": "この問題は、学習者が関数を使ったプログラムの構造化を学ぶのに適しています。動的メモリや配列操作の基礎は理解しているものの、関数の抽象化や再利用性の高いコードの構築に関する経験が不足しているため、関数を用いた問題解決を通じてこれらのスキルを強化できます。また、GCDの計算はアルゴリズムの基礎を学ぶのに適しており、ユークリッドの互除法を通じて効率的なアルゴリズムの理解を深めることができます。",
  "improvements": [
    "問題文に関数の具体的な設計指針を追加し、学習者がどのように関数を分割するかのヒントを与える。",
    "ユークリッドの互除法の基本的な説明を問題文に含め、アルゴリズムの理解を助ける。",
    "学習者が実装を進める際のチェックポイントを提供し、進捗を確認しやすくする。"
  ]
}