{
  "problem_id": "No7.c",
  "difficulty": 7,
  "description": "キーボードから入力された文字列を動的に確保した領域に格納し、その文字列中の母音（a, i, u, e, o, A, I, U, E, O）の数をカウントするプログラムを作成してください。\n\n**入力仕様:**\n1行目に文字列が入力されます。文字列の長さは最大100文字とします。\n\n**出力仕様:**\n母音の数を1行に出力してください。\n\n**追加条件:**\n- 文字列を格納する領域は動的に確保すること。\n- 母音の数をカウントする処理は関数vowel_count()として独立させること。\n- 関数vowel_count()は、文字列へのポインタを引数として受け取り、母音の数を返すように実装すること。\n- 入力文字列の長さが0の場合は、0を出力すること。",
  "reason": "学習者は、配列、ポインタ、動的メモリ確保、文字列操作、条件分岐、反復処理といったC言語の基本的な概念を理解し、それらを組み合わせてプログラムを作成できる能力を示しています。しかし、No6.cは未解答であり、文字列操作に課題がある可能性があります。そこで、文字列操作とポインタ操作を組み合わせた応用問題を提示することで、学習者の理解度を深め、より複雑な問題への挑戦を促します。関数化の要件を追加することで、プログラム構造の設計能力も評価します。",
  "examples": [
    {
      "input": "hello",
      "output": "2",
      "explanation": "文字列\"hello\"には'e'と'o'の2つの母音が含まれています。"
    },
    {
      "input": "AEIOUaeiou",
      "output": "10",
      "explanation": "文字列\"AEIOUaeiou\"には10個の母音が含まれています。"
    },
    {
      "input": "",
      "output": "0",
      "explanation": "空文字列には母音が含まれていません。"
    }
  ],
  "learning_objectives": [
    "動的メモリ確保",
    "ポインタ操作",
    "文字列操作",
    "関数化",
    "条件分岐",
    "反復処理"
  ]
}